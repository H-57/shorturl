<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head') %>
<body>
    
    <%- include('./partials/navbar') %>
 

<div class="bg-slate-900 flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
      <div>

        <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white">No Account required logIn As Guest</h2>
        <button class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600" onclick="guest()">Guest</button>
      </div>
      <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white">Sign in to your account</h2>
    </div>
  
    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
      <form class="space-y-6" action="#" method="POST">
        <div>
          <label for="email" class="block text-sm font-medium leading-6 text-gray-900 text-white">Email address</label>
          <div class="mt-2">
            <input id="email" name="email" type="email" autocomplete="email" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
          </div>
        </div>
  
        <div>
          <div class="flex items-center justify-between">
            <label for="password" class="text-white text-sm font-medium leading-6 text-gray-900">Password</label>
            <div class="text-sm">
              <a href="#" class="font-semibold text-indigo-600 hover:text-indigo-500">Forgot password?</a>
            </div>
          </div>
          <div class="mt-2">
            <input id="password" name="password" type="password" autocomplete="current-password" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
          </div>
        </div>
  
        <div>
          <button id="submit" type="submit" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Sign in</button>
        </div>
      </form>
  
      <p class="mt-10 text-center text-sm text-gray-500">
        Not a member?
        <a href="/user/signup" class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500">Create Account</a>
      </p>
    </div>
  </div>
  
    
       
<body>
  
</body>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>


const guest=async()=>{
  
    const response = await fetch('/user/guest', {
      method: 'POST',
      
    });
  setTimeout(()=>{
    document.location.href="/"
  },1500)

}
  const submit = document.getElementById("submit");
  submit.addEventListener('click', async () => {
    event.preventDefault(); // Prevent the form from submitting

    const email = document.getElementById("email").value;
    const password = document.getElementById("password").value;
    try {
       // Make a POST request to the server
    const response = await fetch('/user/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ email, password })
    });
    
    const data = await response.json();
    console.log(data)
    // Display the response in an alert
    let color="linear-gradient(to right, #06ff06, green)"
   
    if(data.status=="error"){
      console.log("run")
      color ="linear-gradient(to right, #bf3131, tomato)"
    }
Toastify({
  text: data.message,
  duration: 3000,
  // destination: "https://github.com/apvarun/toastify-js",
  // newWindow: true,
  close: true,
  gravity: "top", // `top` or `bottom`
  position: "center", // `left`, `center` or `right`
  stopOnFocus: true, // Prevents dismissing of toast on hover
  style: {
    background: color,
    
  },
  offset: {
    x: 50, // horizontal axis - can be a number or a string indicating unity. eg: '2em'
    y: 10 // vertical axis - can be a number or a string indicating unity. eg: '2em'
  },
  onClick: function(){} // Callback after click
}).showToast();
setTimeout(()=>{

  document.location.href="/"
},2000)
    } catch (error) {
      console.log(error)
    }
   
  });










</script>
</html>